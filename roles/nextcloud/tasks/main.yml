---
- name: Delete Nextcloud directories
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ nextcloud_data_directory }}/postgres"
    - "{{ nextcloud_data_directory }}/redis"

- name: Create Nextcloud directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ nextcloud_data_directory }}/postgres"
    - "{{ nextcloud_data_directory }}/redis"

- name: Create Nextcloud files directory
  file:
    path: "{{ item }}"
    state: directory
    mode: 0770
  with_items:
    - "{{ nextcloud_files_directory }}"

- name: Nextcloud Redis Docker Container
  docker_container:
    name: nextcloud-redis
    image: redis:7-alpine
    pull: true
    recreate: yes
    restart_policy: unless-stopped
    volumes:
      - "{{ nextcloud_data_directory }}/redis:/var/lib/redis"

- name: Nextcloud Postgres Docker Container
  docker_container:
    name: nextcloud-postgres
    image: postgres:15-alpine
    recreate: yes
    pull: true
    volumes:
      - "{{ nextcloud_data_directory }}/postgres:/var/lib/postgresql/data"
    env:
      POSTGRES_DB: "nextcloud"
      POSTGRES_USER: "{{ nextcloud_sql_user }}"
      POSTGRES_PASSWORD: "{{ nextcloud_sql_password }}"
    restart_policy: unless-stopped

- name: Nextcloud Docker Container
  docker_container:
    name: nextcloud
    image: "{{ nextcloud_container }}:{{ nextcloud_version }}"
    pull: true
    recreate: yes
    volumes:
      - ./nextcloud:/var/www/html
      - ./nextcloud-apps:/var/www/html/custom_apps
      - ./nextcloud-config:/var/www/html/config
      - "{{ nextcloud_files_directory }}/:/var/www/html/data"
    links:
      - nextcloud-postgres:postgres
      - nextcloud-redis:redis
    env:
      TZ: "{{ server_timezone }}"
      REDIS_HOST: "redis"
      POSTGRES_HOST: "postgres"
      POSTGRES_DB: "nextcloud"
      POSTGRES_USER: "{{ nextcloud_sql_user }}"
      POSTGRES_PASSWORD: "{{ nextcloud_sql_password }}"
      NEXTCLOUD_TRUSTED_DOMAINS: "localhost,{{ nextcloud_subdomain }}.{{ server_hostname }}"
      NEXTCLOUD_ADMIN_USER: "{{ admin_username }}"
      NEXTCLOUD_ADMIN_PASSWORD: "{{ admin_userpassword }}"
      OVERWRITEPROTOCOL: "{{ 'https' if enable_tls else 'http' }}"
      OVERWRITEHOST: "{{ nextcloud_subdomain }}.{{ server_hostname }}"
    restart_policy: unless-stopped
    labels:
      traefik.enable: "{{ nextcloud_available_externally }}"
      traefik.http.routers.nextcloud.rule: "Host(`{{ nextcloud_subdomain }}.{{ server_hostname }}`)"
      traefik.http.services.nextcloud.loadbalancer.server.port: "80"
      traefik.http.routers.nextcloud.middlewares: "my-headers@file,nextcloud_redirect"
      traefik.http.middlewares.nextcloud_redirect.redirectregex.regex: /.well-known/(card|cal)dav
      traefik.http.middlewares.nextcloud_redirect.redirectregex.replacement: /remote.php/dav/
      traefik.http.services.nextcloud.loadbalancer.passhostheader: "true"
