---
# It seems this thing fucks up generated configurations so I will think about it
- name: wg-ui Docker Container
  docker_container:
    name: wg-ui
    image: embarkstudios/wireguard-ui:latest
    privileged: true
    network_mode: "host"
    pull: true
    volumes:
      - /opt/wireguard-ui:/data
    restart_policy: unless-stopped
    memory: "{{ wg_memory }}"
    env:
      WIREGUARD_UI_LISTEN_ADDRESS: ':8080'
      WIREGUARD_UI_LOG_LEVEL: 'debug'
      WIREGUARD_UI_DATA_DIR: '/data'
      WIREGUARD_UI_WG_ENDPOINT: "{{ ansible_default_ipv4.address }}:{{ wireguard_vpn_port }}"
      WIREGUARD_UI_CLIENT_IP_RANGE: "{{ wireguard_vpn_network }}.10/32"
      WIREGUARD_UI_WG_DNS: "{{ wireguard_vpn_network }}.1"
      WIREGUARD_UI_NAT: 'true'
      WIREGUARD_UI_NAT_DEVICE: 'eth0'
      WIREGUARD_UI_WG_DEVICE_NAME: "{{ wireguard_vpn_interface }}"
    labels:
      traefik.enable: "{{ wg_available_externally }}"
      traefik.http.routers.wg.rule: "Host(`{{ wireguard_ui_subdomain }}.{{ server_hostname }}`)"
      traefik.http.services.wg.loadbalancer.server.port: "8080"
      traefik.http.routers.wg.middlewares: "auth@file,my-headers@file"
  tags:
    - wg-ui
