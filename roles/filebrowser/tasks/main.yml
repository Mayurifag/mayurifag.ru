---
- name: Delete Filebrowser directory
  file:
    path: "{{ filebrowser_data_directory }}"
    state: absent

- name: Create Filebrowser directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ filebroswer_uid }}"
    group: "{{ filebroswer_gid }}"
    mode: u+rwx,g+rwx,o-rwx
  with_items:
    - "{{ filebrowser_files_directory }}"
    - "{{ filebrowser_data_directory }}/config"
    - "{{ filebrowser_data_directory }}/syncthing_config"
    - "{{ filebrowser_data_directory }}/sftpgo_config"
    - "{{ filebrowser_data_directory }}/lms_config"

- name: Touch Filebrowser database file
  file:
    path: "{{ filebrowser_data_directory }}/config/filebrowser.db"
    state: touch
    mode: u+rw,g-wx,o-rwx
    modification_time: preserve
    access_time: preserve
    owner: "{{ filebroswer_uid }}"
    group: "{{ filebroswer_gid }}"

- name: Copy Filebrowser settings file
  template:
    src: settings.json.j2
    dest: "{{ filebrowser_data_directory }}/config/settings.json"
    owner: "{{ filebroswer_uid }}"
    group: "{{ filebroswer_gid }}"
    mode: u+rw,g-wx,o-rwx

- name: Filebrowser Docker Container
  docker_container:
    name: filebrowser
    image: "{{ filebrowser_container }}:{{ filebrowser_version }}"
    pull: true
    recreate: yes
    volumes:
      - "{{ filebrowser_data_directory }}/config/filebrowser.db:/database/filebrowser.db"
      - "{{ filebrowser_data_directory }}/config/settings.json:/config/settings.json"
      - "{{ filebrowser_files_directory }}/:/srv"
    env:
      TZ: "{{ server_timezone }}"
      PUID: "{{ filebroswer_uid }}"
      PGID: "{{ filebroswer_gid }}"
    restart_policy: unless-stopped
    # v2.28.0 hotfix
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 20s
      retries: 3
    labels:
      traefik.enable: "{{ filebrowser_available_externally }}"
      traefik.http.routers.filebrowser.rule: "Host(`{{ filebrowser_subdomain }}.{{ server_hostname }}`)"
      traefik.http.services.filebrowser.loadbalancer.server.port: "80"
      traefik.http.routers.filebrowser.middlewares: "my-headers@file"

- name: Syncthing Docker Container
  docker_container:
    name: syncthing
    image: linuxserver/syncthing:1.27.6
    pull: true
    recreate: yes
    volumes:
      - "{{ filebrowser_data_directory }}/syncthing_config:/config"
      - "{{ filebrowser_files_directory }}:/mnt"
    env:
      TZ: "{{ server_timezone }}"
      PUID: "{{ filebroswer_uid }}"
      PGID: "{{ filebroswer_gid }}"
    ports:
      - "22000:22000"
      - "21027:21027/udp"
    restart_policy: unless-stopped
    labels:
      traefik.enable: "{{ filebrowser_available_externally }}"
      traefik.http.routers.syncthing.rule: "Host(`{{ syncthing_subdomain }}.{{ server_hostname }}`)"
      traefik.http.services.syncthing.loadbalancer.server.port: "8384"
      traefik.http.routers.syncthing.middlewares: "my-headers@file"

- name: SFTPGo Docker Container
  docker_container:
    name: sftpgo
    image: drakkan/sftpgo:v2.5.6
    pull: true
    recreate: yes
    user: "{{ filebroswer_uid }}:{{ filebroswer_gid }}"
    volumes:
      - "{{ filebrowser_data_directory }}/sftpgo_config:/var/lib/sftpgo"
      - "{{ filebrowser_files_directory }}:/srv/sftpgo/data/{{ admin_username }}/"
    env:
      TZ: "{{ server_timezone }}"
      SFTPGO_WEBDAVD__BINDINGS__0__PORT: "10080"
    ports:
      - "2022:2022"
      # - "10080:10080"
    restart_policy: unless-stopped
    labels:
      traefik.enable: "{{ filebrowser_available_externally }}"
      ### Web UI ###
      traefik.http.routers.sftpgo.rule: "Host(`{{ sftpgo_subdomain }}.{{ server_hostname }}`)"
      traefik.http.services.sftpgo.loadbalancer.server.port: "8080"
      traefik.http.routers.sftpgo.service: "sftpgo"
      traefik.http.routers.sftpgo.middlewares: "my-headers@file"
      ### WebDAV ###
      traefik.http.routers.webdav.rule: Host(`{{ webdav_subdomain }}.{{ server_hostname }}`)
      traefik.http.services.webdav.loadbalancer.server.port: "10080"
      traefik.http.routers.webdav.service: "webdav"

- name: LMS Docker Container https://github.com/epoupon/lms
  docker_container:
    name: lms
    image: epoupon/lms:3.51.0
    pull: true
    recreate: yes
    user: "{{ filebroswer_uid }}:{{ filebroswer_gid }}"
    volumes:
      - "{{ filebrowser_data_directory }}/lms_config:/var/lms"
      - "{{ filebrowser_files_music_directory }}:/music:ro"
    env:
      TZ: "{{ server_timezone }}"
    restart_policy: unless-stopped
    labels:
      traefik.enable: "{{ filebrowser_available_externally }}"
      ### Web UI ###
      traefik.http.routers.lms.rule: "Host(`{{ lms_subdomain }}.{{ server_hostname }}`)"
      traefik.http.services.lms.loadbalancer.server.port: "5082"
      traefik.http.routers.lms.service: "lms"
      traefik.http.routers.lms.middlewares: "my-headers@file"
