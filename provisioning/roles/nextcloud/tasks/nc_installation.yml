---
- name: "[NC] - Setting directory ownership & permissions for the data folder"
  file:
    path: "{{ nextcloud_data_dir }}"
    mode: "u=rwX,g=rX,o-rwx"
    recurse: yes
    state: directory
    owner: "nginx"
    group: "nginx"

- block:
  - name: "[NC] - Setting lighter directory ownership"
    file:
      path: "{{ nextcloud_webroot }}/{{ item }}/"
      recurse: yes
      owner: "nginx"
      group: "nginx"
      mode: "u=rwX,g=rwX,o=rwx"
      state: directory
    with_items:
      - apps
      - assets
      - config
      - themes
      - updater

  - name: "[NC] - removing possibly old or incomplete config.php"
    file:
      path: "{{ nextcloud_webroot }}/config/config.php"
      state: absent

  - name: "[NC] - Run occ installation command"
    become_user: "nginx"
    become: yes
    command: >
        php occ maintenance:install
        --database=mysql
        --database-host=127.0.0.1
        --database-name=nextcloud
        --database-user={{ maildb.username }}
        --database-pass={{ maildb.password }}
        --admin-user={{ nextcloud_admin_name }}
        --admin-pass={{ nextcloud_admin_pwd }}
        --data-dir={{ nextcloud_data_dir }}
    args:
      chdir: "{{ nextcloud_webroot }}"
      creates: "{{ nextcloud_webroot }}/config/config.php"

  - name: "[NC] - Verify config.php - check filesize"
    stat: path="{{ nextcloud_webroot }}/config/config.php"
    register: nc_installation_confsize
    failed_when: nc_installation_confsize.stat.size is undefined or nc_installation_confsize.stat.size <= 100

  - name: "[NC] - Verify config.php - php syntax check"
    command: "php -l {{ nextcloud_webroot }}/config/config.php"
    register: nc_installation_confphp
    changed_when: False
    failed_when:
      - nc_installation_confphp.rc is defined
      - nc_installation_confphp.rc != 0

  rescue:
    - name: "[NC] - removing config.php when occ fail"
      file:
        path: "{{ nextcloud_webroot }}/config/config.php"
        state: absent
      failed_when: True

- name: "[NC] - Set Trusted Domains"
  become_user: "nginx"
  become: yes
  command: php occ config:system:set trusted_domains {{ item.0 }} --value="{{ item.1 | ipwrap }}"
  args:
    chdir: "{{ nextcloud_webroot }}"
  with_indexed_items: "{{ nextcloud_trusted_domain }}"
  changed_when: true

- name: "[NC] - Set Nextcloud settings in config.php"
  become_user: "nginx"
  become: yes
  command: php occ config:system:set {{ item.name }} --value="{{ item.value }}"
  args:
    chdir: "{{ nextcloud_webroot }}"
  with_items:
    - "{{ nextcloud_config_settings }}"
  changed_when: true

- name: "[NC] - Set Redis Server"
  become_user: "nginx"
  become: yes
  command: php occ config:system:set {{ item.name }} --value="{{ item.value }}"
  args:
    chdir: "{{ nextcloud_webroot }}"
  with_items:
    - "{{ nextcloud_redis_settings }}"

- name: "[NC] - Install Cronjob"
  cron:
    name: "Nextcloud Cronjob"
    minute: "*/15"
    user: "nginx"
    job: "php {{ nextcloud_webroot }}/cron.php"
    cron_file: "nextcloud"

- name: "[NC] - Set Cron method to Crontab"
  become_user: "nginx"
  become: yes
  command: php occ background:cron
  args:
    chdir: "{{ nextcloud_webroot }}"

- name: "[NC] - Set Custom Mimetype"
  copy:
    dest: "{{ nextcloud_webroot }}/config/mimetypemapping.json"
    src: files/nextcloud_custom_mimetypemapping.json

- name: "[NC] - Ensure Nextcloud directories are 0750"
  command: find {{ nextcloud_data_dir }} -type d -exec chmod -c 0750 {} \;
  register: nc_installation_chmod_result
  changed_when: "nc_installation_chmod_result.stdout != \"\""

- name: "[NC] - Ensure Nextcloud files are 0640"
  command: find {{ nextcloud_data_dir }} -type f -exec chmod -c 0640 {} \;
  register: nc_installation_chmod_result
  changed_when: "nc_installation_chmod_result.stdout != \"\""
