- name: Add Ondrej Sury's apt key (Debian).
  apt_key:
    url: https://packages.sury.org/php/apt.gpg
    state: present

- name: Add Ondrej Sury's repo (Debian).
  apt_repository:
    repo: "deb https://packages.sury.org/php/ {{ ansible_distribution_release }} main"
    state: present

- name: Update apt caches after repo is added (Debian).
  apt:
    update_cache: true

- name: "Required and recommended packages are installed + nginx-fpm"
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - smbclient
    - "php{{ php_ver }}-gd"
    - "php{{ php_ver }}-ldap"
    - "php{{ php_ver }}-imap"
    - "php{{ php_ver }}-json"
    - "php{{ php_ver }}-curl"
    - "php{{ php_ver }}-intl"
    - "php{{ php_ver }}-fpm"
    - "{{ php_pkg_spe }}"
    - "{{ php_pkg_apcu }}"
    - "php{{ php_ver }}-mysql"
    - "python{{ '3' if ansible_python.version.major == 3 else '' }}-pymysql"

  notify:
    - start php-fpm

- name: "[NGINX] -  remove some commented line in php-fpm conf"
  lineinfile:
    dest: "{{ php_dir }}/fpm/pool.d/www.conf"
    regexp: '^\;env'
    state: absent
    # validate: "/usr/sbin/{{ php_bin }} -t #%s"
  notify: restart php-fpm

- name: "[NGINX] - Dirty hack user and group in php-fpm conf"
  replace:
    dest: "{{ php_dir }}/fpm/pool.d/www.conf"
    regexp: 'www-data'
    replace: 'nginx'
  notify: restart php-fpm

- name: "[NGINX] -  Add path variable to php-fpm"
  blockinfile:
    dest: "{{ php_dir }}/fpm/pool.d/www.conf"
    insertafter: '^; Default Value: clean env$'
    marker: "; {mark} ANSIBLE MANAGED BLOCK"
    block: |
      env[HOSTNAME] = $HOSTNAME
      env[PATH] = $PATH
      env[TMP] = /tmp
      env[TMPDIR] = /tmp
      env[TEMP] = /tmp
  notify: restart php-fpm

- name: "[NGINX] -  enable APC for php CLI"
  lineinfile:
    dest: "{{ php_dir }}/cli/php.ini"
    line: "apc.enable_cli = 1"
    insertbefore: "^; End:$"
    state: present
    # validate: "/usr/sbin/{{ php_bin }} -t #%s"
  notify: restart php-fpm

- name: "[NGINX] -  enable PHP OPcache for php.ini"
  lineinfile:
    dest: "{{ php_dir }}/fpm/php.ini"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
  with_items:
    - { regexp: 'opcache.enable=0', line: 'opcache.enable=1' }
    - { regexp: 'opcache.enable_cli', line: 'opcache.enable_cli=1' }
    - { regexp: 'opcache.interned_strings_buffer', line: 'opcache.interned_strings_buffer=8' }
    - { regexp: 'opcache.max_accelerated_files', line: 'opcache.max_accelerated_files=10000' }
    - { regexp: 'opcache.memory_consumption', line: 'opcache.memory_consumption=128' }
    - { regexp: 'opcache.save_comments', line: 'opcache.save_comments=1' }
    - { regexp: 'opcache.revalidate_freq', line: 'opcache.revalidate_freq=1' }
    # validate: "/usr/sbin/{{ php_bin }} -t #%s"
  notify: restart php-fpm

- name: "[NGINX] -  php handler configuration is present."
  template:
    dest: /etc/nginx/conf.d/php_handler.conf
    src: nginx_php_handler.j2
  notify: reload nginx
